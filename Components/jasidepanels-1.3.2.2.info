{"Name":"JASidePanels","Id":1254,"Alias":"jasidepanels","Description":"JASidePanels is a UIViewController container designed for presenting a center panel with revealable side panels - one to the left and one to the right. \n\nThe main inspiration for this project is the menuing system in Path 2.0 and Facebook\u0027s iOS apps.\n\n##  Example 1 : Code\n\n\n\t[Register (\"AppDelegate\")]\n\tpublic partial class AppDelegate : UIApplicationDelegate\n\t{\n\t\t// class-level declarations\n\t\tUIWindow window;\n\t\tJASidePanelController viewController;\n\n\t\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t\t{\n\t\t\twindow = new UIWindow (UIScreen.MainScreen.Bounds);\n\n\t\t\t// set up the actual view controller here\n\t\t\tviewController = new JASidePanelController();\n\t\t\tviewController.ShouldDelegateAutorotateToVisiblePanel = false;\n\n\t\t\t// set up the controller panes here\n\t\t\tviewController.LeftPanel = new JALeftViewController();\n\t\t\tviewController.CenterPanel = new UINavigationController (new JACenterViewController ());\n\t\t\tviewController.RightPanel = new JARightViewController();\n\n\t\t\t// off we go\n\t\t\twindow.RootViewController = viewController;\n\t\t\twindow.MakeKeyAndVisible ();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n## Example 2 : Storyboards\n\n1. Create a subclass of `JASidePanelController`. In this example we call it `MySidePanelController`.\n2. In the Storyboard designer, the root view\u0027s owner as `MySidePanelController`.\n3. Add more view controllers to your Storyboard, give them ids \"leftViewController\", \"centerViewController\" and \"rightViewController\". \n4. Override the method `AwakeFromNib` to `MySidePanelController.cs` with the following code:\n\n\n    public override void AwakeFromNib ()\n    {\n        LeftPanel = Storyboard.InstantiateViewController (\"leftViewController\");\n        CenterPanel = Storyboard.InstantiateViewController (\"centerViewController\");\n        RightPanel = Storyboard.InstantiateViewController (\"rightViewController\");\n    }\n\n## Extension Method\n\nAn extension method is also provided in the project. This adds a single convenience method to `UIViewController`. The method provides access to the nearest `JASidePanelController` ancestor in your view controller heirarchy. It behaves similar to the NavigationController UIViewController property provided by Apple. Here\u0027s an example:\n\n    public class JALeftViewController : UIViewController\n    {\n\t\tpublic override void ViewDidLoad ()\n\t\t{\n\t\t\tbase.ViewDidLoad ();\n\t\t\t\n            // sweet, I can access my parent JASidePanelController as an extension method!\n    \t\tthis.SidePanelController ().ShowCenterPanelAnimated (true);\n\t\t}\n    }\n    \n## Requirements\n\n\nJASidePanels requires iOS 5.0+\n\n\n","Version":"1.3.2.2","Summary":"JASidePanels is a UIViewController container designed for presenting a center panel with revealable side panels - one to the left and one to the right.","QuickStart":"JASidePanels is a UIViewController container designed for presenting a center panel with revealable side panels - one to the left and one to the right. \n\nThe main inspiration for this project is the menuing system in Path 2.0 and Facebook\u0027s iOS apps.\n\n##  Example 1 : Code\n\n\n\t[Register (\"AppDelegate\")]\n\tpublic partial class AppDelegate : UIApplicationDelegate\n\t{\n\t\t// class-level declarations\n\t\tUIWindow window;\n\t\tJASidePanelController viewController;\n\n\t\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t\t{\n\t\t\twindow = new UIWindow (UIScreen.MainScreen.Bounds);\n\n\t\t\t// set up the actual view controller here\n\t\t\tviewController = new JASidePanelController();\n\t\t\tviewController.ShouldDelegateAutorotateToVisiblePanel = false;\n\n\t\t\t// set up the controller panes here\n\t\t\tviewController.LeftPanel = new JALeftViewController();\n\t\t\tviewController.CenterPanel = new UINavigationController (new JACenterViewController ());\n\t\t\tviewController.RightPanel = new JARightViewController();\n\n\t\t\t// off we go\n\t\t\twindow.RootViewController = viewController;\n\t\t\twindow.MakeKeyAndVisible ();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n## Example 2 : Storyboards\n\n1. Create a subclass of `JASidePanelController`. In this example we call it `MySidePanelController`.\n2. In the Storyboard designer, the root view\u0027s owner as `MySidePanelController`.\n3. Add more view controllers to your Storyboard, give them ids \"leftViewController\", \"centerViewController\" and \"rightViewController\". \n4. Override the method `AwakeFromNib` to `MySidePanelController.cs` with the following code:\n\n\n    public override void AwakeFromNib ()\n    {\n        LeftPanel = Storyboard.InstantiateViewController (\"leftViewController\");\n        CenterPanel = Storyboard.InstantiateViewController (\"centerViewController\");\n        RightPanel = Storyboard.InstantiateViewController (\"rightViewController\");\n    }\n\n## Extension Method\n\nAn extension method is also provided in the project. This adds a single convenience method to `UIViewController`. The method provides access to the nearest `JASidePanelController` ancestor in your view controller heirarchy. It behaves similar to the NavigationController UIViewController property provided by Apple. Here\u0027s an example:\n\n    public class JALeftViewController : UIViewController\n    {\n\t\tpublic override void ViewDidLoad ()\n\t\t{\n\t\t\tbase.ViewDidLoad ();\n\t\t\t\n            // sweet, I can access my parent JASidePanelController as an extension method!\n    \t\tthis.SidePanelController ().ShowCenterPanelAnimated (true);\n\t\t}\n    }\n    \n## Requirements\n\n\nJASidePanels requires iOS 5.0+\n\n\n","Hash":"2ad2d1b62e4d93fbeaccf386d3cd966a","TargetPlatforms":["ios"],"TrialHash":null}